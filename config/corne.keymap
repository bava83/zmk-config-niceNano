#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"


/* layer and key shortcuts */

#define ___ &trans

#define DEF 0  // layer shortcuts, must match order in which they are defined below
#define NUM 1
#define SMB 2
#define SYS 3

/* custom behaviors */

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
)

// tap: sticky shift | double tap: capsword
ZMK_BEHAVIOR(ss_cw, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&sk LSHFT>, <&caps_word>;
)

// change esc to tab when holding alt
// so that tab+esc key becomes alt+tab
ZMK_BEHAVIOR(esc_tab, mod_morph,
    bindings = <&kp ESC>, <&kp TAB>;
    mods = <(MOD_LALT|MOD_LCTL|MOD_RCTL)>;
)

// tap: backspace | shift + tap: delete | hold: num layer
//ZMK_BEHAVIOR(bs_del_num, mod_morph,
//    bindings = <&lt NUM BSPC>, <&kp DEL>;
//    mods = <(MOD_LSFT|MOD_RSFT)>;
// )
//&bs_del_num

// windows sleep macro
//ZMK_BEHAVIOR(win_sleep, macro,
//    wait-ms = <100>;
//    tap-ms = <5>;
//    bindings = <&kp LG(X) &kp U &kp S>;
//)

// euro sign
//ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €

// replace a/o/u/s with German umlauts when NAV and NUM are held jointly
//ZMK_CONDITIONAL_LAYER(NAV NUM, GER)

// combos

//#undef COMBO_TERM
//#define COMBO_TERM 40  // timeout of 40ms (default is 30ms if omitted)
//ZMK_COMBO(combo_sleep,  &win_sleep, RT3 RT4, NAV)  // custom sleep macro, only active on NAV layer
//ZMK_COMBO(combo_copy,   &kp LC(C),  LB2 LB3, ALL)  // Ctrl + C, active on all layers
//ZMK_COMBO(combo_paste,  &kp LC(V),  LB1 LB2, ALL)  // Ctrl + V, active on all layers

/* keymap */


ZMK_LAYER(default_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &esc_tab      &hrm N1 Q     &hrm N2 W     &hrm N3 E     &hrm N4 R     &hrm N5 T         &hrm N6 Y     &hrm N7 U      &hrm N8 I    &hrm N9 O     &hrm N0 P     &hrm EQUAL MINUS
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &ss_cw        &hrm LGUI A   &hrm LALT S   &hrm LCTRL D  &hrm LSHFT F  &kp G             &kp H         &hrm LSHFT J  &hrm LCTRL K  &hrm LALT L   &hrm LGUI SEMI &kp SQT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LCTRL     &kp Z         &kp X         &kp C         &kp V         &hrm PLUS B       &hrm ASTRK N  &kp M         &kp COMMA     &kp PERIOD   &kp SLASH      &kp BACKSLASH     
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &mt LALT TAB  &lt SYS SPACE &to NUM          &mo SMB       &kp RET       &kp BSPC    
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(number_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &esc_tab      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &hrm EQUAL MINUS
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &ss_cw        &hrm LGUI A   &hrm LALT S   &hrm LCTRL D  &hrm LSHFT F  &kp G             &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp SEMI    &kp SQT 
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LCTRL     &kp Z         &kp X         &kp C         &kp V         &kp PLUS          &kp ASTRK      &kp EQUAL        &kp COMMA     &kp PERIOD    &kp SLASH    &kp BACKSLASH      
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &mt LALT TAB  &lt SYS SPACE &to DEF          &mo SMB       &kp RET       &kp BSPC    
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(symbol_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp TILDE     &kp EXCL      &kp AT        &kp POUND     &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR      &hrm EQUAL MINUS
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &ss_cw        &kp PLUS      &kp MINUS     &kp LBKT      &kp LBRC       &kp LPAR          &kp RPAR      &kp  RBRC        &kp RBKT     &kp ASTRK     &kp SLASH     &kp EQUAL
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LCTRL     &none         &none         &none         &kp EQUAL         &kp PLUS       &kp ASTRK     &kp EQUAL     &kp COMMA     &kp PERIOD    &kp SLASH     &kp BACKSLASH     
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &mt LALT TAB  &lt SYS SPACE &to  DEF         &to DEF       &kp RET      &kp BSPC    
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)


//ok
ZMK_LAYER(system_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6            &none         &kp N7        &kp N8        &kp N9        &kp PLUS      &kp MINUS
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12           &none        &hrm LSHFT N4 &hrm LCTRL N5 &hrm LALT N6  &hrm LGUI ASTRK &kp SLASH
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &bt BT_CLR    &bt BT_SEL 5  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1      &none         &kp N1        &kp N2        &kp N3        &kp EQUAL     &kp RET     
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &bootloader   &tog DEF      &to DEF          &to DEF      &kp N0        &kp PERIOD    
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
